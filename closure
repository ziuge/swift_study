# Closures 클로저

자체 포함된 기능 블럭, 코드 안에서 돌아다니고 사용할 수 있음

정의된 컨텍스트에서 모든 상수와 변수에 대한 참조를 캡쳐하고 저장할 수 있음. 이러한 상수와 변수를 폐쇄(closing over)라고 함. 

- 클로저의 3가지 형테
    1. Global funcions 전역 함수: 이름을 가지고 어떠한 값도 캡처하지 않는 클로저
    2. Nested functions 중첩 함수: 이름을 가지고 둘러싼 함수로부터 값을 캡처할 수 있는 클로저
    3. Closure expressions 클로저 표현식: 주변 컨텍스트에서 값을 캡처할 수 있는 경량 구문으로 작성된 이름이 없는 클로저

클로저 표현식 최적화:

- 컨텍스트에서 파라미터와 반환값 타입 유추
- 단일 표현식 클로저의 암시적 반환
- 약식 인자 이름
- 후행 클로저 구문

## Closure Expressions 클로저 표현식

중첩 함수 Nested Functions는 더 큰 함수에 포함된 코드 블럭의 이름을 지정하고 정의하기 편리한 수단이나, 완전한 선언과 이름없이 함수와 유사한 구조의 짧은 버전을 작성하는 것이 유용할 때도 있다. (예를 들어 함수를 하나 이상의 인자로 사용하는 함수 혹은 메서드로 작업하는 경우)

클로저 표현식은 간단하고 집중적인 구문으로 인라인 클로저로 작성함

짧은 형태로 클로저를 작성하기 위한 몇 가지 구문 최적화를 제공함

### The Sorted Method 정렬 메서드
